import{dv as $,e7 as O,dz as T,dK as P,dx as L,dy as E,dA as M,dw as F,dM as R,dL as j,b2 as J,dY as v,bq as g,e8 as N,a0 as f,b7 as _,e9 as q,ea as U,eb as A,s as x,j as V,o as a,y as o,ec as S,bV as k,e6 as z,dD as D,p as K,dJ as Z,ed as B}from"./index-CV1RNnVc.js";import{i as C}from"./scaleUtils-COg5t-y0.js";import{m as G,f as H,t as W}from"./SublayersOwner-CHT2Sy_5.js";import{y as Y}from"./ExportImageParameters-BghgIw0q.js";import{t as Q}from"./imageBitmapUtils-CBZVSjHZ.js";import{e as I}from"./sublayerUtils-qbp7LI5P.js";import"./QueryTask-DHlcAYfh.js";import"./infoFor3D-DsOdlPuA.js";import"./executeForIds-CcWak5yq.js";import"./query-BLmgntBC.js";import"./pbfQueryUtils-DpQLp1ZK.js";import"./pbf-Dd2oS6-P.js";import"./OptimizedFeature-DUj7o6ET.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./executeQueryJSON-B9l4HpJk.js";import"./executeQueryPBF-dePQeau5.js";import"./featureConversionUtils-DsZmOiGt.js";import"./floorFilterUtils-DZ5C6FQv.js";let i=class extends $(O(T(G(H(P(L(E(M(F(R(j(Z)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new Y({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(J).then(()=>this._fetchService(r))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const l=r.supportedImageFormatTypes;return l&&l.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,l,t){var m,u,b;if(!this.loaded||!e)return;const s=e.slice().reverse().flatten(({sublayers:p})=>p&&p.toArray().reverse()).toArray();let n=!1;const d=v(t.origin);if((m=this.capabilities)!=null&&m.operations.supportsExportMap&&((b=(u=this.capabilities)==null?void 0:u.exportMap)!=null&&b.supportsDynamicLayers)){if(d===g.PORTAL_ITEM){const p=this.createSublayersForOrigin("service").sublayers;n=I(s,p,g.SERVICE)}else if(d>g.PORTAL_ITEM){const p=this.createSublayersForOrigin("portal-item");n=I(s,p.sublayers,v(p.origin))}}const y=[],c={writeSublayerStructure:n,...t};let h=n||this.hasVisibleLayersForOrigin(d);s.forEach(p=>{const w=p.write({},c);y.push(w),h=h||p.originOf("visible")==="user"}),y.some(p=>Object.keys(p).length>1)&&(r.layers=y),h&&(r.visibleLayers=s.filter(p=>p.visible).map(p=>p.id))}createExportImageParameters(e,r,l,t){const s=(t==null?void 0:t.pixelRatio)||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=(t==null?void 0:t.floors)??null,this._exportImageParameters.scale=C({extent:e,width:r})*s;const n=this._exportImageParameters.toJSON(),d=!(t!=null&&t.rotation)||this.version<10.3?{}:{rotation:-t.rotation},y=e==null?void 0:e.spatialReference,c=N(y);n.dpi*=s;const h={};if(t!=null&&t.timeExtent){const{start:m,end:u}=t.timeExtent.toJSON();h.time=m&&u&&m===u?""+m:`${m??"null"},${u??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(h.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:c,imageSR:c,size:r+","+l,...n,...d,...h}}async fetchImage(e,r,l,t){const{data:s}=await this._fetchImage("image",e,r,l,t);return s}async fetchImageBitmap(e,r,l,t){const{data:s,url:n}=await this._fetchImage("blob",e,r,l,t);return Q(s,n,t==null?void 0:t.signal)}async fetchRecomputedExtents(e={}){const r={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:l}=await f(this.url,r),{extent:t,fullExtent:s,timeExtent:n}=l,d=t||s;return{fullExtent:d&&_.fromJSON(d),timeExtent:n&&q.fromJSON({start:n[0],end:n[1]})}}loadAll(){return U(this,e=>{e(this.allSublayers),e(this.subtables)})}serviceSupportsSpatialReference(e){return A(this,e)}async _fetchImage(e,r,l,t,s){var y,c,h;const n={responseType:e,signal:(s==null?void 0:s.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,l,t,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},d=this.parsedUrl.path+"/export";if(((y=n.query)==null?void 0:y.dynamicLayers)!=null&&!((h=(c=this.capabilities)==null?void 0:c.exportMap)!=null&&h.supportsDynamicLayers))throw new x("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:m}=await f(d,n);return{data:m,url:d}}catch(m){throw V(m)?m:new x("mapimagelayer:image-fetch-error",`Unable to load image: ${d}`,{error:m})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:l}=await f(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});l&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){var r;return!(e==null||!((r=this.sublayersSourceJSON[e])!=null&&r.visibleLayers))}};a([o(S("dateFieldsTimeReference"))],i.prototype,"dateFieldsTimeZone",void 0),a([o({type:Boolean})],i.prototype,"datesInUnknownTimezone",void 0),a([o()],i.prototype,"dpi",void 0),a([o()],i.prototype,"gdbVersion",void 0),a([o()],i.prototype,"imageFormat",void 0),a([k("imageFormat",["supportedImageFormatTypes"])],i.prototype,"readImageFormat",null),a([o({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],i.prototype,"imageMaxHeight",void 0),a([o({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],i.prototype,"imageMaxWidth",void 0),a([o()],i.prototype,"imageTransparency",void 0),a([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),a([o({json:{read:!1,write:!1}})],i.prototype,"labelsVisible",void 0),a([o({type:["ArcGISMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),a([o({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),a([o(S("preferredTimeReference"))],i.prototype,"preferredTimeZone",void 0),a([o()],i.prototype,"sourceJSON",void 0),a([o({json:{write:{ignoreOrigin:!0}}})],i.prototype,"sublayers",void 0),a([z("sublayers",{layers:{type:[W]},visibleLayers:{type:[B]}})],i.prototype,"writeSublayers",null),a([o({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),a([o({json:{read:!1},readOnly:!0,value:"map-image"})],i.prototype,"type",void 0),a([o(D)],i.prototype,"url",void 0),i=a([K("esri.layers.MapImageLayer")],i);const fe=i;export{fe as default};
