import{o as r,y as o,p as m,c as g,j as l,n as d,q as u}from"./index-CV1RNnVc.js";import{a as c}from"./BitmapContainer-DG0MHb9I.js";import{f as y,y as f}from"./LayerView-Ik0Rpayt.js";import{V as x}from"./GraphicsView2D-ucPe7wWh.js";import{h as _}from"./HighlightGraphicContainer-BsS8943o.js";import{_ as w}from"./ExportStrategy-WcEp_o-l.js";import{y as H}from"./ExportImageParameters-BghgIw0q.js";import{i as v}from"./timeSupport-DHF6mvJ1.js";import{i as I}from"./RefreshableLayerView-BwO4WjoR.js";import{_ as $,r as V}from"./drapedUtils-CJ-am5Ut.js";import"./WGLContainer-DS1DUwXh.js";import"./definitions-Y_v3njP4.js";import"./LabelMetric-CKYk5YLJ.js";import"./enums-BRXbslMp.js";import"./Texture-BsBk66Gl.js";import"./enums-BlUEVwJR.js";import"./Program-IknYB_eZ.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./ProgramTemplate-ChPGpLtP.js";import"./vec3f32-nZdmKIgz.js";import"./Container-mdwkhUSc.js";import"./highlightReasons-CEz_d-G7.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-B6ozfZ3O.js";import"./featureConversionUtils-DsZmOiGt.js";import"./OptimizedFeature-DUj7o6ET.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./layerViewUtils-DaObYqcz.js";import"./UpdateTracking2D-C2m-U6Bs.js";import"./BidiEngine-BwB1Df7c.js";import"./GeometryUtils-dY8oul-1.js";import"./Rect-CUzevAry.js";import"./BindType-BmZEZMMh.js";import"./Util-BBOtn1Zj.js";import"./AttributeStore-24ZAQG_e.js";import"./TimeOnly-C4_FgVPM.js";import"./timeSupport-C7BQG2Gu.js";import"./json-Wa8cmqdu.js";import"./FeatureCommandQueue-CiftbFh6.js";import"./constants-D5zmR9t2.js";import"./normalizeUtilsSync-Gc-SAONG.js";import"./AGraphicContainer-DlP5x7K3.js";import"./TechniqueInstance-DNVnMfkS.js";import"./TileContainer-Bhnej7pl.js";import"./Bitmap-hD5sjTMr.js";import"./scaleUtils-COg5t-y0.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-qbp7LI5P.js";import"./popupUtils-nEcD9TDf.js";const E=t=>{let i=class extends t{initialize(){this.exportImageParameters=new H({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get floors(){var e;return((e=this.view)==null?void 0:e.floors)??null}get exportImageVersion(){var e;return(e=this.exportImageParameters)==null||e.commitProperty("version"),this.commitProperty("timeExtent"),this.commitProperty("floors"),(this._get("exportImageVersion")||0)+1}get timeExtent(){var e;return v(this.layer,(e=this.view)==null?void 0:e.timeExtent,this._get("timeExtent"))}canResume(){var e;return!!super.canResume()&&!((e=this.timeExtent)!=null&&e.isEmpty)}};return r([o()],i.prototype,"exportImageParameters",void 0),r([o({readOnly:!0})],i.prototype,"floors",null),r([o({readOnly:!0})],i.prototype,"exportImageVersion",null),r([o()],i.prototype,"layer",void 0),r([o()],i.prototype,"suspended",void 0),r([o({readOnly:!0})],i.prototype,"timeExtent",null),i=r([m("esri.views.layers.MapImageLayerView")],i),i};let s=class extends E(I(y(f))){constructor(){super(...arguments),this._highlightGraphics=new g,this._updateHash=""}fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i)}update(t){const i=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==i&&(this._updateHash=i,this.strategy.update(t).catch(e=>{l(e)||d.getLogger(this).error(e)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:i,version:e}=this.layer,a=e>=10.3,n=e>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer),this._highlightView=new x({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new _(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(p,h)=>V(p,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(p,h)=>{this._highlightView.graphicUpdateHandler({graphic:p,property:h})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new w({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:i,imageRotationSupported:a,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(u(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,i,e,a){return this.layer.fetchImage(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...a})}fetchImageBitmap(t,i,e,a){return this.layer.fetchImageBitmap(t,i,e,{timeExtent:this.timeExtent,floors:this.floors,...a})}highlight(t){return this._popupHighlightHelper.highlight(t)}};r([o()],s.prototype,"strategy",void 0),r([o()],s.prototype,"updating",void 0),s=r([m("esri.views.2d.layers.MapImageLayerView2D")],s);const It=s;export{It as default};
