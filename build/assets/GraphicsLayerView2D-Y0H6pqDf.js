import{z as o,A as g,V as m,O as n,e as a,o as p,y as l,p as c}from"./index-D53vMPd9.js";import{t as d}from"./highlightReasons-M5sf-_ox.js";import{f as u,y as w}from"./LayerView-yG8mn8ty.js";import{t as y}from"./GraphicContainer-CM8ftvSy.js";import{V}from"./GraphicsView2D-CmZgFDxc.js";import{e as f}from"./HighlightCounter-BFkC22d_.js";import"./Container-D0PztaTh.js";import"./definitions-Y_v3njP4.js";import"./enums-BlUEVwJR.js";import"./Texture-CqazhqFM.js";import"./layerViewUtils-DaObYqcz.js";import"./AGraphicContainer-CcurG_Y4.js";import"./TechniqueInstance-C4WEKqbk.js";import"./UpdateTracking2D-DhZ2KO-9.js";import"./BidiEngine-BwB1Df7c.js";import"./OptimizedFeature-DUj7o6ET.js";import"./GeometryUtils-C5ej_iIV.js";import"./enums-BRXbslMp.js";import"./Rect-CUzevAry.js";import"./LabelMetric-Dea-z4Pm.js";import"./Program-nKZuE_pH.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-Csz4XzIe.js";import"./TileContainer-CZmS8-48.js";import"./WGLContainer-BC0iQaMO.js";import"./ProgramTemplate-mscC1f_P.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BK3ROBTO.js";import"./config-MDUrh2eL.js";import"./earcut-DZgeeiHY.js";import"./featureConversionUtils-CjdjcvRf.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-PV9oTGg2.js";import"./constants-D5zmR9t2.js";import"./AttributeStore-c9c3vlWu.js";import"./TimeOnly-D1WxW24T.js";import"./timeSupport-BHaiFWx3.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-DkRPQ8Tq.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let e;typeof i=="number"?e=[i]:i instanceof g?e=[i.uid]:Array.isArray(i)&&i.length>0?e=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(e=i.map(h=>h&&h.uid).toArray());const r=e==null?void 0:e.filter(n);return r!=null&&r.length?(this._addHighlight(r,t),a(()=>this._removeHighlight(r,t))):a()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const e of this._highlightCounter.ids()){const r=this._highlightCounter.getHighlightReason(e),h=d(r);i.push({objectId:e,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};p([l()],s.prototype,"graphicsView",void 0),s=p([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const ai=s;export{ai as default};
