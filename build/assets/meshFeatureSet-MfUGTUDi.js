import{t as h,bA as d,A as y,b7 as S,as as N,e5 as l,n as D}from"./index-BQYPq7Rf.js";import{$ as g}from"./Mesh-DoHbM3JO.js";import{N as M,o as w,i as F}from"./MeshTransform-DQPZYr9t.js";import{s as T}from"./infoFor3D-DsOdlPuA.js";import"./imageUtils-DIRPX2H5.js";import"./MeshVertexAttributes-CqaE02ra.js";import"./MeshLocalVertexSpace-VwR5AhX3.js";import"./meshVertexSpaceUtils-dGf18D6M.js";import"./earcut-2hkM7tHL.js";import"./DoubleArray-JK_gK8iP.js";import"./Indices-CdF-iv4H.js";import"./plane-DGioZwiC.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-Bdb9ZJJK.js";import"./deduplicate-CnaDmvzO.js";import"./projection-DYYNs8OW.js";import"./spatialReferenceEllipsoidUtils-B7nGQtOR.js";import"./computeTranslationToOriginAndRotation-By8L1udD.js";import"./BufferView-B5xDg0dr.js";import"./vec3-BRKkHxOW.js";import"./vec4-5nzg1q-1.js";import"./vertexSpaceConversion-Cvj3mExP.js";import"./quat-CuYL4PxU.js";const A=()=>D.getLogger("esri.rest.support.meshFeatureSet");function ot(t,e,r){const n=r.features;r.features=[],delete r.geometryType;const o=h.fromJSON(r);if(o.geometryType="mesh",!r.assetMaps)return o;const s=$(e,r.assetMaps),i=t.sourceSpatialReference??d.WGS84,m=r.globalIdFieldName,{outFields:a}=t,c=a!=null&&a.length>0?I(a.includes("*")?null:new Set(a)):()=>({});for(const u of n){const p=b(u,m,i,e,s);o.features.push(new y({geometry:p,attributes:c(u)}))}return o}function I(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function b(t,e,r,n,o){const s=t.attributes[e],i=o.get(s);if(i==null||!t.geometry)return null;const m=L(t,r,n),a=S.fromJSON(t.geometry);a.spatialReference=r;const c=O(t.attributes,n),u=r.isGeographic?"local":"georeferenced",p=x(i);return p?g.createWithExternalSource(m,p,{extent:a,transform:c,vertexSpace:u}):g.createIncomplete(m,{extent:a,transform:c,vertexSpace:u})}function L({attributes:t},e,{transformFieldRoles:r}){const n=t[r.originX],o=t[r.originY],s=t[r.originZ];return new N({x:n,y:o,z:s,spatialReference:e})}function O(t,{transformFieldRoles:e}){return new M({translation:[t[e.translationX],-t[e.translationZ],t[e.translationY]],rotationAxis:[t[e.rotationX],-t[e.rotationZ],t[e.rotationY]],rotationAngle:t[e.rotationDeg],scale:[t[e.scaleX],t[e.scaleZ],t[e.scaleY]]})}var f;function $(t,e){const r=new Map;for(const n of e){const o=n.parentGlobalId;if(o==null)continue;const s=n.assetName,i=n.assetType,m=n.assetHash,a=n.assetURL,c=n.conversionStatus,u=n.seqNo,p=T(i,t.supportedFormats);if(!p){A().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const E=l(r,o,()=>({files:new Map}));l(E.files,s,()=>({name:s,type:i,mimeType:p,status:P(c),parts:[]})).parts[u]={hash:m,url:a}}return r}function x(t){const e=Array.from(t.files.values()),r=new Array;for(const n of e){if(n.status!==f.COMPLETED)return null;const o=new Array;for(const s of n.parts){if(!s)return null;o.push(new w(s.url,s.hash))}r.push(new F(n.name,n.mimeType,o))}return r}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return f.COMPLETED;case"INPROGRESS":return f.PENDING;default:return f.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(f||(f={}));export{$ as assetMapFromAssetMapsJSON,b as extractMesh,ot as meshFeatureSetFromJSON};
